{
  "version": 3,
  "sources": ["../../../l2.infrastructure/src-page-mvc/sw/sw.ts"],
  "sourcesContent": ["//\r\nimport {IServiceWorker} from \"./sw-lib.ts\";\r\n\r\nconst version:string   = \"1.1\";\r\nconst cacheName = \"jmc_cache\"+version;\r\nconst cacheFiles = [\r\n    'welcome.html',\r\n    'markup.html',\r\n    'manifest_markup.json',\r\n    'manifest_cls.json',\r\n    'cls.html',\r\n    'css/reset.css',\r\n    'images/icons/jmc512.png',\r\n    'bundles/l2.infrastructure/src-page-mvc/markup/markup.js',\r\n    'data/web_components.html',\r\n    'images/icons/favicon.ico',\r\n    'images/icons/jmc144.png',\r\n    'images/me3.png',\r\n    'html/es6-ts-this.html',\r\n    'html/js-for-loops.html'\r\n];\r\n\r\nclass ServiceWorker implements IServiceWorker{\r\n\r\n    constructor(){\r\n        self.addEventListener('install', (e) => {this.install(e)} );\r\n        self.addEventListener('fetch'  , (e) => {this.fetch(e)} );\r\n\r\n        console.log(`sw version: ${version} handlers installed...`);\r\n    }\r\n\r\n    addToCache(response:Response){\r\n\r\n        console.log(\"sw addToCache\", response);\r\n\r\n        caches.open(cacheName);\r\n\r\n        cache => cache.put( response  );\r\n\r\n    }\r\n\r\n    install(fe:FetchEvent){\r\n\r\n        console.log(\"sw install event\");\r\n\r\n        fe.waitUntil(\r\n            caches.open(cacheName)\r\n            .then(cache => cache.addAll( cacheFiles  ))\r\n            .then( () => self.skipWaiting() )\r\n        );\r\n\r\n    }\r\n\r\n    async generateResponse(event:FetchEvent):Promise<Response>{\r\n        const cache = await caches.open(cacheName);\r\n        const cachedResponse = await cache.match(event.request);\r\n\r\n        // if not in cache fetch from network then add to cache\r\n        if(cachedResponse){\r\n            console.log(\"sw cache\", cachedResponse.url);\r\n            return cachedResponse;\r\n        }\r\n            \r\n        console.log(\"request not in cache, going to netwok and updating cache\");\r\n\r\n        const networkResponse = fetch(event.request);\r\n\r\n        // do not return until cache is updated in background\r\n        event.waitUntil( cache.put(event.request, networkResponse) );  \r\n\r\n         return networkResponse;\r\n     }\r\n\r\n    fetch(fe:FetchEvent){\r\n        if(fe.request.method !== \"GET\")return;\r\n\r\n   //     console.log(\"sw fetch-get event url= \", fe.request.url);\r\n\r\n        fe.respondWith( this.generateResponse(fe) );\r\n    }\r\n\r\n    push(event: Event){\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    sync(event: Event) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    activate(event: Event) {\r\n\r\n        // delete old chache is the name if different\r\n        event.waitUntil(\r\n\r\n         //   this.cache.keys().then()\r\n        )\r\n\r\n        console.log(\"activate not implemented.\");\r\n    }\r\n\r\n    message(event: Event) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    cache(event: Event) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}\r\n\r\nconst sw = new ServiceWorker();"],
  "mappings": "AAGA,MAAM,UAAmB;AACzB,MAAM,YAAY,cAAY;AAC9B,MAAM,aAAa;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AAEA,MAAM,cAAuC;AAAA,EAEzC,cAAa;AACT,SAAK,iBAAiB,WAAW,CAAC,MAAM;AAAC,WAAK,QAAQ,CAAC;AAAA,IAAC,CAAE;AAC1D,SAAK,iBAAiB,SAAW,CAAC,MAAM;AAAC,WAAK,MAAM,CAAC;AAAA,IAAC,CAAE;AAExD,YAAQ,IAAI,eAAe,OAAO,wBAAwB;AAAA,EAC9D;AAAA,EAEA,WAAW,UAAkB;AAEzB,YAAQ,IAAI,iBAAiB,QAAQ;AAErC,WAAO,KAAK,SAAS;AAErB,eAAS,MAAM,IAAK,QAAU;AAAA,EAElC;AAAA,EAEA,QAAQ,IAAc;AAElB,YAAQ,IAAI,kBAAkB;AAE9B,OAAG;AAAA,MACC,OAAO,KAAK,SAAS,EACpB,KAAK,WAAS,MAAM,OAAQ,UAAY,CAAC,EACzC,KAAM,MAAM,KAAK,YAAY,CAAE;AAAA,IACpC;AAAA,EAEJ;AAAA,EAEA,MAAM,iBAAiB,OAAmC;AACtD,UAAM,QAAQ,MAAM,OAAO,KAAK,SAAS;AACzC,UAAM,iBAAiB,MAAM,MAAM,MAAM,MAAM,OAAO;AAGtD,QAAG,gBAAe;AACd,cAAQ,IAAI,YAAY,eAAe,GAAG;AAC1C,aAAO;AAAA,IACX;AAEA,YAAQ,IAAI,0DAA0D;AAEtE,UAAM,kBAAkB,MAAM,MAAM,OAAO;AAG3C,UAAM,UAAW,MAAM,IAAI,MAAM,SAAS,eAAe,CAAE;AAE1D,WAAO;AAAA,EACX;AAAA,EAED,MAAM,IAAc;AAChB,QAAG,GAAG,QAAQ,WAAW,MAAM;AAI/B,OAAG,YAAa,KAAK,iBAAiB,EAAE,CAAE;AAAA,EAC9C;AAAA,EAEA,KAAK,OAAa;AACd,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAAA,EAEA,KAAK,OAAc;AACf,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAAA,EAEA,SAAS,OAAc;AAGnB,UAAM;AAAA;AAAA,IAGN;AAEA,YAAQ,IAAI,2BAA2B;AAAA,EAC3C;AAAA,EAEA,QAAQ,OAAc;AAClB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAAA,EAEA,MAAM,OAAc;AAChB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAEJ;AAEA,MAAM,KAAK,IAAI,cAAc;",
  "names": []
}
